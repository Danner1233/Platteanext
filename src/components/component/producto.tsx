/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/B1pf7lMqcmh
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Arimo } from 'next/font/google'
import { Chivo } from 'next/font/google'

arimo({
  subsets: ['latin'],
  display: 'swap',
})

chivo({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState, useEffect, JSX, SVGProps, SetStateAction } from "react"
import { Select, SelectTrigger, SelectValue, SelectContent, SelectItem } from "@/components/ui/select"
import { Button } from "@/components/ui/button"

export function Producto() {
  const [selectedSize, setSelectedSize] = useState("M")
  const [selectedColor, setSelectedColor] = useState("black")
  const [rating, setRating] = useState(3)
  const [isLoaded, setIsLoaded] = useState(false)

  useEffect(() => {
    // Simulate a loading state
    setIsLoaded(true)
  }, [])

  // If not loaded, render nothing or a loading spinner
  if (!isLoaded) return null

  const handleSizeChange = (size: SetStateAction<string>) => {
    setSelectedSize(size)
  }
  const handleColorChange = (color: SetStateAction<string>) => {
    setSelectedColor(color)
  }
  const handleRatingChange = (value: SetStateAction<number>) => {
    setRating(value)
  }

  return (
    <div className="flex flex-col h-full">
      <header className="bg-background shadow-sm sticky top-0 z-10">
        <div className="container mx-auto px-4 md:px-6 py-4 flex items-center justify-between">
          <h1 className="text-2xl font-bold">Product Details</h1>
        </div>
      </header>
      <div className="flex items-center justify-center px-4 md:px-6 py-8">
        <div className="container mx-auto grid grid-cols-1 md:grid-cols-2 gap-8">
          <div>
            <img
              src="/placeholder.svg"
              alt="Product Image"
              width={600}
              height={600}
              className="w-full rounded-lg"
              style={{ aspectRatio: "600/600", objectFit: "cover" }}
            />
          </div>
          <div className="flex flex-col gap-4">
            <h2 className="text-3xl font-bold">Classic Leather Shoes</h2>
            <p className="text-muted-foreground">Elegant and comfortable</p>
            <div className="flex items-center gap-2">
              {[1, 2, 3, 4, 5].map((star) => (
                <StarIcon
                  key={star}
                  className={`w-5 h-5 cursor-pointer ${
                    star <= rating ? "fill-primary" : "fill-muted stroke-muted-foreground"
                  }`}
                  onClick={() => handleRatingChange(star)}
                />
              ))}
            </div>
            <p className="text-lg">
              These classic leather shoes are the perfect addition to your wardrobe. Crafted with premium materials and
              attention to detail, they offer both style and comfort. Whether you're dressing up for a special occasion
              or looking for a versatile everyday shoe, these are sure to become a staple in your closet.
            </p>
            <div className="flex flex-col md:flex-row items-center justify-between">
              <h3 className="text-3xl font-bold">$59.99</h3>
              <div className="flex gap-2 mt-4 md:mt-0">
                <div className="flex items-center gap-2">
                  <span className="text-muted-foreground">Size:</span>
                  <Select value={selectedSize} onValueChange={handleSizeChange}>
                    <SelectTrigger className="w-[100px]">
                      <SelectValue placeholder="Size" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="S">S</SelectItem>
                      <SelectItem value="M">M</SelectItem>
                      <SelectItem value="L">L</SelectItem>
                      <SelectItem value="XL">XL</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
                <div className="flex items-center gap-2">
                  <span className="text-muted-foreground">Color:</span>
                  <Select value={selectedColor} onValueChange={handleColorChange}>
                    <SelectTrigger className="w-[100px]">
                      <SelectValue placeholder="Color" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="black">Black</SelectItem>
                      <SelectItem value="brown">Brown</SelectItem>
                      <SelectItem value="tan">Tan</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
                <Button>Add to Cart</Button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

function StarIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2" />
    </svg>
  )
}